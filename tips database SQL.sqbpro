<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="E:/Analisis data scyntis/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure query browser pragmas" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="5166"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainalbums"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="albums" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="84"/><column index="2" value="300"/><column index="3" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="111"/><column index="2" value="97"/><column index="3" value="105"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="167"/><column index="7" value="55"/><column index="8" value="124"/><column index="9" value="106"/><column index="10" value="165"/><column index="11" value="157"/><column index="12" value="233"/><column index="13" value="131"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="invoices" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="93"/><column index="2" value="111"/><column index="3" value="162"/><column index="4" value="300"/><column index="5" value="167"/><column index="6" value="109"/><column index="7" value="132"/><column index="8" value="160"/><column index="9" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SELECT 1">SELECT*
FROM customers</sql><sql name="SELECT 2">SELECT CustomerId, FirstName, City
FROM customers</sql><sql name="LIMIT 1">SELECT*
FROM customers
LIMIT 5</sql><sql name="LIMIT 2">SELECT CustomerId, FirstName, City
FROM customers
LIMIT 10</sql><sql name="WHERE 1">SELECT*
FROM customers
WHERE CustomerId &gt; 10</sql><sql name="WHERE 2">SELECT CustomerId, City, Country
FROM customers
WHERE Country = &quot;Brazil&quot;</sql><sql name="WHERE 3">SELECT*
FROM customers
WHERE Company IS NULL</sql><sql name="WHERE 4">SELECT*
FROM customers
WHERE Company IS NOT NULL</sql><sql name="ORDER BY 1'">SELECT*
FROM customers
ORDER BY FirstName ASC</sql><sql name="ORDER BY 2">SELECT*
FROM customers
ORDER BY CustomerId DESC</sql><sql name="ORDER BY 3">SELECT*
FROM customers
ORDER BY FirstName ASC, Country ASC</sql><sql name="ORDER BY 4">SELECT*
FROM customers
WHERE Company IS NULL
ORDER BY Country ASC, FirstName ASC</sql><sql name="CASE  1">SELECT
	CASE
		WHEN total &gt; 5 THEN &quot;high&quot;
		WHEN total &lt;= 5 AND total &gt; 1 THEN &quot;medium&quot;
		ELSE &quot;low&quot;
	END
FROM invoices</sql><sql name="CASE 2">SELECT total,
	CASE
		WHEN total &gt; 5 THEN &quot;high&quot;
		WHEN total &lt;= 5 AND total &gt; 1 THEN &quot;medium&quot;
		ELSE &quot;low&quot;
	END AS total_category
FROM invoices</sql><sql name="CASE 3">SELECT*
FROM invoices
ORDER BY (
	CASE
		WHEN BillingState IS NOT NULL THEN BillingState
		ELSE BillingCity
	END
)</sql><sql name="TOTAL 1">SELECT count(*)
FROM invoices</sql><sql name="TOTAL 2">SELECT max(Total) AS maximum_total_invoice
FROM invoices</sql><sql name="GROUB BY 1">SELECT BillingCity, count(InvoiceId) AS number_of_invoices
FROM invoices
GROUP BY BillingCity</sql><sql name="GROUB BY 2">SELECT BillingCity, sum(total) AS total_city_invoices
FROM invoices
GROUP BY BillingCity</sql><sql name="GROUB BY 3">SELECT BillingCountry, count(DISTINCT BillingCity) AS number_of_cities
FROM invoices
GROUP BY BillingCountry</sql><sql name="LEFT JOIN">SELECT InvoiceId, invoices.CustomerId, FirstName
FROM invoices
LEFT JOIN customers
ON invoices.CustomerId = customers.CustomerId</sql><sql name="RIGHT JOIN">SELECT InvoiceId, invoices.CustomerId, FirstName
FROM invoices
RIGHT JOIN customers
ON invoices.CustomerId = customers.CustomerId</sql><sql name="INNER JOIN">SELECT InvoiceId, invoices.CustomerId, FirstName
FROM invoices
INNER JOIN customers
ON invoices.CustomerId = customers.CustomerId</sql><sql name="FULL JOIN">SELECT InvoiceId, invoices.CustomerId, FirstName
FROM invoices
FULL JOIN customers
ON invoices.CustomerId = customers.CustomerId</sql><sql name="UNION ALL">SELECT * FROM artists
UNION ALL
SELECT * FROM genres</sql><sql name="UNION DISTINCT">SELECT * FROM artists
UNION DISTINCT
SELECT * FROM genres</sql><current_tab id="0"/></tab_sql></sqlb_project>
